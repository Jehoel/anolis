<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="A_Message" xml:space="preserve">
    <value>This wizard will guide you through the steps involved in installing an Anolis package

To continue, press Next</value>
  </data>
  <data name="A_Title" xml:space="preserve">
    <value>Welcome to the Anolis Package Installer</value>
  </data>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="Background" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>Background.jpg;System.Drawing.Bitmap, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="Banner" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>Banner.jpg;System.Drawing.Bitmap, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="B_installBlurb" xml:space="preserve">
    <value>Installs a package located in this Anolis distribution or elsewhere in this computer. The package can be installed to a setup files (I386) folder.</value>
  </data>
  <data name="B_installRad" xml:space="preserve">
    <value>Install a package</value>
  </data>
  <data name="B_toolsBlurb" xml:space="preserve">
    <value>Downloads tools so you can easily make your own package or distribution</value>
  </data>
  <data name="B_toolsRad" xml:space="preserve">
    <value>Make my own package or distribution</value>
  </data>
  <data name="B_uninstallBlurb" xml:space="preserve">
    <value>Recovers files to their before-patched status. You will need the backup directory that was created during installation</value>
  </data>
  <data name="B_uninstallRad" xml:space="preserve">
    <value>Undo changes made by this distribution</value>
  </data>
  <data name="Package" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>Package.ico;System.Drawing.Icon, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="B_Subtitle" xml:space="preserve">
    <value>Choose an operation to perform</value>
  </data>
  <data name="B_Title" xml:space="preserve">
    <value>Select a Task</value>
  </data>
  <data name="C_A_anopRad" xml:space="preserve">
    <value>A package archive (*.anop) on my computer</value>
  </data>
  <data name="C_A_embedRad" xml:space="preserve">
    <value>A package embedded in this installer</value>
  </data>
  <data name="C_A_packRad" xml:space="preserve">
    <value>A package definition file (package.xml) on my computer</value>
  </data>
  <data name="C_A_Subtitle" xml:space="preserve">
    <value>The package to install can either be in this computer's filesystem or embedded in this installer</value>
  </data>
  <data name="C_A_Title" xml:space="preserve">
    <value>Select a package to install</value>
  </data>
  <data name="C_B_error" xml:space="preserve">
    <value>An error occured whilst attempting to extract the package</value>
  </data>
  <data name="C_B_instantiating" xml:space="preserve">
    <value>Instantiating Package</value>
  </data>
  <data name="C_E_noInfo" xml:space="preserve">
    <value>The selected item '{0}' does not have any information associated with it</value>
  </data>
  <data name="C_F_installButton" xml:space="preserve">
    <value>Install</value>
  </data>
  <data name="C_G_status" xml:space="preserve">
    <value>{0}% complete - {1}</value>
  </data>
  <data name="D_A_destLbl" xml:space="preserve">
    <value>Destination directory</value>
  </data>
  <data name="D_A_progGroup" xml:space="preserve">
    <value>Create Anolis program group in the start menu</value>
  </data>
  <data name="D_A_progGroupAll" xml:space="preserve">
    <value>For all users</value>
  </data>
  <data name="D_A_progGroupMe" xml:space="preserve">
    <value>Just for me</value>
  </data>
  <data name="F_finishButton" xml:space="preserve">
    <value>Finish</value>
  </data>
  <data name="F_installationCompleteRestart" xml:space="preserve">
    <value>Installation has been completed succesfully. Your computer will now restart.

Close all open applications before continuing. Do not attempt to open any new applications.</value>
  </data>
  <data name="F_installTools" xml:space="preserve">
    <value>Installation has been completed succesfully.</value>
  </data>
  <data name="F_restartButton" xml:space="preserve">
    <value>Restart</value>
  </data>
  <data name="F_Title" xml:space="preserve">
    <value>Installation Complete</value>
  </data>
  <data name="F_uninstallationComplete" xml:space="preserve">
    <value>Uninstallation has been completed succesfully. Your computer will now restart.

Close all open applications before continuing. Do not attempt to open any new applications.</value>
  </data>
  <data name="C_F_backup" xml:space="preserve">
    <value>Create uninstallation backup directory (Recommended)</value>
  </data>
  <data name="C_F_backupDesc" xml:space="preserve">
    <value>You must create a backup directory if you ever wish to uninstall this package in future</value>
  </data>
  <data name="C_F_comp" xml:space="preserve">
    <value>Install to this Computer</value>
  </data>
  <data name="C_F_i386" xml:space="preserve">
    <value>Install to I386</value>
  </data>
  <data name="C_F_sysRes" xml:space="preserve">
    <value>Create System Restore Point (Recommended)</value>
  </data>
  <data name="C_F_sysResDesc" xml:space="preserve">
    <value>An added layer of protection. Note this does not always protect against modifications made to non-Windows files under Program Files</value>
  </data>
  <data name="C_C_Subtitle" xml:space="preserve">
    <value>The package may have been updated since you acquired it. Now checking for updates.</value>
  </data>
  <data name="C_C_Title" xml:space="preserve">
    <value>Checking for Package Updates</value>
  </data>
  <data name="C_B_Subtitle" xml:space="preserve">
    <value>Please wait whilst the installer prepares the package for installation</value>
  </data>
  <data name="C_E_Subtitle" xml:space="preserve">
    <value>You can choose whether or not to install components of this package</value>
  </data>
  <data name="C_E_Title" xml:space="preserve">
    <value>Modify Package</value>
  </data>
  <data name="C_F_Subtitle" xml:space="preserve">
    <value>Select a backup directory and other options</value>
  </data>
  <data name="C_F_Title" xml:space="preserve">
    <value>Installation Options</value>
  </data>
  <data name="C_G_Subtitle" xml:space="preserve">
    <value>Your selected package is being installed</value>
  </data>
  <data name="C_G_Title" xml:space="preserve">
    <value>Installing Package</value>
  </data>
  <data name="Lang_Attribution" xml:space="preserve">
    <value />
  </data>
  <data name="Lang_AttributionUri" xml:space="preserve">
    <value />
  </data>
  <data name="Lang_Flag" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>Flags\en.png;System.Drawing.Bitmap, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="Lang_Lcid" xml:space="preserve">
    <value>en</value>
  </data>
  <data name="Lang_Name" xml:space="preserve">
    <value>English</value>
  </data>
  <data name="C_C_downloadProgress" xml:space="preserve">
    <value>{0}% - {1}KB of {2}KB downloaded at {3}KBps</value>
  </data>
  <data name="C_C_infoChecking" xml:space="preserve">
    <value>Checking for package update</value>
  </data>
  <data name="C_C_infoFailed" xml:space="preserve">
    <value>Check for updates failed: could not download update info</value>
  </data>
  <data name="C_C_infoUpdateAvailableAutomatic" xml:space="preserve">
    <value>An updated version ({0}) of this package is available. Would you like to download it now?</value>
  </data>
  <data name="C_C_infoUpdateAvailableManual" xml:space="preserve">
    <value>An updated version ({0}) of this package is available, but you need to download it manually. Click Visit Package Webpage for more information.</value>
  </data>
  <data name="C_C_infoUpdateLatest" xml:space="preserve">
    <value>You have the latest version ({0}) of this package.</value>
  </data>
  <data name="F_installationComplete" xml:space="preserve">
    <value>Installation has been completed succesfully.</value>
  </data>
  <data name="Wiz_Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Wiz_Next" xml:space="preserve">
    <value>Next</value>
  </data>
  <data name="Wiz_Prev" xml:space="preserve">
    <value>Back</value>
  </data>
  <data name="EULA" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\EULA.rtf;System.String, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089;Windows-1252</value>
  </data>
  <data name="C_D_Subtitle" xml:space="preserve">
    <value>Review any release notes made by the package's author</value>
  </data>
  <data name="C_D_Title" xml:space="preserve">
    <value>Package Release Notes</value>
  </data>
  <data name="C_D_installerNotes" xml:space="preserve">
    <value>Anolis Installer Readme</value>
  </data>
  <data name="C_D_packageNotes" xml:space="preserve">
    <value>{0} Package Release Notes</value>
  </data>
  <data name="C_F_pathInvalidBackup" xml:space="preserve">
    <value>The specified backup path is not valid</value>
  </data>
  <data name="C_F_pathInvalidI386" xml:space="preserve">
    <value>The specified I386 path is not valid</value>
  </data>
  <data name="C_F_pathExistsBackup" xml:space="preserve">
    <value>The specified backup directory already exists and contains files. Backups must be made to either an empty directory or a directory that doesn't exist yet.</value>
  </data>
  <data name="C_B_errorPackageXmlNotFound" xml:space="preserve">
    <value>The specified package archive did not contain a package definition file.</value>
  </data>
  <data name="C_C_skipCheckLbl" xml:space="preserve">
    <value>You can skip the update check by clicking the Next button at any time.</value>
  </data>
</root>
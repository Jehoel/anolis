//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3082
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Anolis.Installer.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "2.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Wizard {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Wizard() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Anolis.Installer.Resources.Wizard", typeof(Wizard).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This wizard will guide you through the steps involved in installing an Anolis package
        ///
        ///Distributions of Anolis can customise the text placed here and throughout the wizard
        ///
        ///To continue, press Next.
        /// </summary>
        internal static string A_Message {
            get {
                return ResourceManager.GetString("A_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Welcome to the Anolis Package Installer.
        /// </summary>
        internal static string A_Title {
            get {
                return ResourceManager.GetString("A_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installs a package located in this Anolis distribution or elsewhere in this computer. The package can be installed to a setup files (I386) folder..
        /// </summary>
        internal static string B_installBlurb {
            get {
                return ResourceManager.GetString("B_installBlurb", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Install a package.
        /// </summary>
        internal static string B_installRad {
            get {
                return ResourceManager.GetString("B_installRad", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Choose an operation to perform.
        /// </summary>
        internal static string B_Subtitle {
            get {
                return ResourceManager.GetString("B_Subtitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select a Task.
        /// </summary>
        internal static string B_Title {
            get {
                return ResourceManager.GetString("B_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Downloads tools so you can easily make your own package or distribution..
        /// </summary>
        internal static string B_toolsBlurb {
            get {
                return ResourceManager.GetString("B_toolsBlurb", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Make my own package or distribution.
        /// </summary>
        internal static string B_toolsRad {
            get {
                return ResourceManager.GetString("B_toolsRad", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Recovers files to their before-patched status. You will need the backup directory that was created during installation..
        /// </summary>
        internal static string B_uninstallBlurb {
            get {
                return ResourceManager.GetString("B_uninstallBlurb", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Undo changes made by this distribution.
        /// </summary>
        internal static string B_uninstallRad {
            get {
                return ResourceManager.GetString("B_uninstallRad", resourceCulture);
            }
        }
        
        internal static System.Drawing.Bitmap Background {
            get {
                object obj = ResourceManager.GetObject("Background", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Banner {
            get {
                object obj = ResourceManager.GetObject("Banner", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A package archive (*.anop) on my computer.
        /// </summary>
        internal static string C_A_anopRad {
            get {
                return ResourceManager.GetString("C_A_anopRad", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A package embedded in this installer.
        /// </summary>
        internal static string C_A_embedRad {
            get {
                return ResourceManager.GetString("C_A_embedRad", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A package definition file (package.xml) on my computer.
        /// </summary>
        internal static string C_A_packRad {
            get {
                return ResourceManager.GetString("C_A_packRad", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The package to install can either be in this computer&apos;s filesystem or embedded in this installer.
        /// </summary>
        internal static string C_A_Subtitle {
            get {
                return ResourceManager.GetString("C_A_Subtitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select a package to install.
        /// </summary>
        internal static string C_A_Title {
            get {
                return ResourceManager.GetString("C_A_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occured whilst attempting to extract the package.
        /// </summary>
        internal static string C_B_error {
            get {
                return ResourceManager.GetString("C_B_error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Instantiating Package.
        /// </summary>
        internal static string C_B_instantiating {
            get {
                return ResourceManager.GetString("C_B_instantiating", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please wait whilst the installer prepares the package for installation.
        /// </summary>
        internal static string C_B_Subtitle {
            get {
                return ResourceManager.GetString("C_B_Subtitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} may have been updated since you acquired it. Would you like to check for updates?.
        /// </summary>
        internal static string C_C_Subtitle {
            get {
                return ResourceManager.GetString("C_C_Subtitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Checking for Package Updates.
        /// </summary>
        internal static string C_C_Title {
            get {
                return ResourceManager.GetString("C_C_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The selected item &apos;{0}&apos; does not have any information associated with it.
        /// </summary>
        internal static string C_D_noInfo {
            get {
                return ResourceManager.GetString("C_D_noInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can choose whether or not to install components of this package.
        /// </summary>
        internal static string C_D_Subtitle {
            get {
                return ResourceManager.GetString("C_D_Subtitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Modify Package.
        /// </summary>
        internal static string C_D_Title {
            get {
                return ResourceManager.GetString("C_D_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create uninstallation backup directory (Recommended).
        /// </summary>
        internal static string C_E_backup {
            get {
                return ResourceManager.GetString("C_E_backup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You must create a backup directory if you ever wish to uninstall this package in future.
        /// </summary>
        internal static string C_E_backupDesc {
            get {
                return ResourceManager.GetString("C_E_backupDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Install to this Computer.
        /// </summary>
        internal static string C_E_comp {
            get {
                return ResourceManager.GetString("C_E_comp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Install to I386.
        /// </summary>
        internal static string C_E_i386 {
            get {
                return ResourceManager.GetString("C_E_i386", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Install.
        /// </summary>
        internal static string C_E_installButton {
            get {
                return ResourceManager.GetString("C_E_installButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select a backup directory and other options.
        /// </summary>
        internal static string C_E_Subtitle {
            get {
                return ResourceManager.GetString("C_E_Subtitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create System Restore Point (Recommended).
        /// </summary>
        internal static string C_E_sysRes {
            get {
                return ResourceManager.GetString("C_E_sysRes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An added layer of protection. Note this does not always protect against modifications made to non-Windows files under Program Files.
        /// </summary>
        internal static string C_E_sysResDesc {
            get {
                return ResourceManager.GetString("C_E_sysResDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installation Options.
        /// </summary>
        internal static string C_E_Title {
            get {
                return ResourceManager.GetString("C_E_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}% complete - {1}.
        /// </summary>
        internal static string C_F_status {
            get {
                return ResourceManager.GetString("C_F_status", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your selected package is being installed.
        /// </summary>
        internal static string C_F_Subtitle {
            get {
                return ResourceManager.GetString("C_F_Subtitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installing Package.
        /// </summary>
        internal static string C_F_Title {
            get {
                return ResourceManager.GetString("C_F_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Destination directory.
        /// </summary>
        internal static string D_A_destLbl {
            get {
                return ResourceManager.GetString("D_A_destLbl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create Anolis program group in the start menu.
        /// </summary>
        internal static string D_A_progGroup {
            get {
                return ResourceManager.GetString("D_A_progGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For all users.
        /// </summary>
        internal static string D_A_progGroupAll {
            get {
                return ResourceManager.GetString("D_A_progGroupAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Just for me.
        /// </summary>
        internal static string D_A_progGroupMe {
            get {
                return ResourceManager.GetString("D_A_progGroupMe", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Finish.
        /// </summary>
        internal static string F_finishButton {
            get {
                return ResourceManager.GetString("F_finishButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installation has been completed succesfully. Your computer will now restart.
        ///
        ///Close all open applications before continuing. Do not attempt to open any new applications..
        /// </summary>
        internal static string F_installationComplete {
            get {
                return ResourceManager.GetString("F_installationComplete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installation has been completed succesfully..
        /// </summary>
        internal static string F_installTools {
            get {
                return ResourceManager.GetString("F_installTools", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Restart.
        /// </summary>
        internal static string F_restartButton {
            get {
                return ResourceManager.GetString("F_restartButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installation Complete.
        /// </summary>
        internal static string F_Title {
            get {
                return ResourceManager.GetString("F_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Uninstallation has been completed succesfully. Your computer will now restart.
        ///
        ///Close all open applications before continuing. Do not attempt to open any new applications..
        /// </summary>
        internal static string F_uninstallationComplete {
            get {
                return ResourceManager.GetString("F_uninstallationComplete", resourceCulture);
            }
        }
        
        internal static System.Drawing.Icon Package {
            get {
                object obj = ResourceManager.GetObject("Package", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
    }
}
